/* Color Theme Swatches in Hex */
.guitar_splitComplimentary-1-hex { color: #628C7C; }
.guitar_splitComplimentary-2-hex { color: #8DD9BC; }
.guitar_splitComplimentary-3-hex { color: #D9AB82; }
.guitar_splitComplimentary-4-hex { color: #465B8C; }
.guitar_splitComplimentary-5-hex { color: #7794D9; }

/* Color Theme Swatches in RGBA */
.guitar_splitComplimentary-1-rgba { color: rgba(98, 140, 124, 1); }
.guitar_splitComplimentary-2-rgba { color: rgba(141, 217, 188, 1); }
.guitar_splitComplimentary-3-rgba { color: rgba(217, 171, 130, 1); }
.guitar_splitComplimentary-4-rgba { color: rgba(70, 91, 140, 1); }
.guitar_splitComplimentary-5-rgba { color: rgba(119, 148, 217, 1); }

/* Color Theme Swatches in HSLA */
.guitar_splitComplimentary-1-hsla { color: hsla(157, 17, 46, 1); }
.guitar_splitComplimentary-2-hsla { color: hsla(157, 50, 70, 1); }
.guitar_splitComplimentary-3-hsla { color: hsla(28, 53, 68, 1); }
.guitar_splitComplimentary-4-hsla { color: hsla(222, 33, 41, 1); }
.guitar_splitComplimentary-5-hsla { color: hsla(222, 56, 65, 1); }

/* Store variables here: */
:root {
    --header_border_brown: #944E4E;
}

html {
    /* If you want to create the gap by shrinking the content, set the box-sizing property to border-box (i.e. box-sizing: border-box). */
    /* https://blog.hubspot.com/website/css-margin-vs-padding */
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing */
    box-sizing: border-box;
}

/* Sticky Footer */
.wrapper {
    min-height: 100vh;
    display: grid;
    grid-template-rows: auto 1fr auto;
}

/* Make everything inherit the box-sizing. */
*, *:before, *:after {
    box-sizing: inherit;
}

/* Create some padding to separate content from page bounds. */
/* https://developer.mozilla.org/en-US/docs/Web/CSS/padding#syntax */
/* Set margin to 0 */
/* https://developer.mozilla.org/en-US/docs/Web/CSS/margin#syntax */
header, main, footer {
    /* vertical | horizontal */
    margin: 0 0;
    /* vertical | horizontal */
    padding: 0 1.5em;
}

nav > p > a {
    color: var(--header_border_brown);
}

nav > address > a {
    color: var(--header_border_brown);
}

/* Now: Let's change the font for all text in 'body'. */
body {
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
    color: hsla(222, 33%, 30%, 1);
    background-color: hsla(28, 53%, 68%, .6);
    border-top: 25px solid hsla(222, 33%, 41%, 1);
}

header {
    width: 100%;
}

/* Let's align the text of the header to 'center'. This will affect a <div> and a <nav>, which are in the <header>. */
header {
    text-align: center;
    background-color: hsla(157, 17%, 46%, 1);
}

.full-width-header {
    width: 100%;
    background-color: hsla(157, 17%, 46%, 1);
    border-top: .25em solid var(--header_border_brown);
    padding-bottom: .5em;
}

.thing-at-top-of-main {
    padding-top: .5em;
}

.a-tap-in-the-list h3 {
    font-size: 1.3em;
    margin: 30px 0 0 0;
}

footer {
    text-align: right;
}

/* Some padding on top and bottom of stuff inside <address> */
address > a {
    display: inline-block;
    margin: .3em 0;
}

@media (min-width: 700px) {
    .all-the-taps {
        display: flex;
        flex-wrap: wrap;
    }

    .a-tap-in-the-list {
        width: 50%;
        /* Some padding to separate items from each other */
        padding: .5em;
    }
}

@media (min-width: 1100px) {

    .a-tap-in-the-list {
        width: 33.33%;
    }

    header {
        display: flex;
        /* Put title/subtitle to left and links to right. */
        /* We will align the text within those next. */
        justify-content: space-between;
    }

    /* Align the page heading/title to the left. */
    /* .page-title h1 {
        text-align: left;
    } */

    /* Align the page heading/title to the left. */
    h1 {
        text-align: left;
    }

    /* Align the page links to the right. */
    nav {
        text-align: right;
    }
}



/* We should set a max width. If user uses a really large display width, we want the site to stay within reason. If the site had a design where the items could keep accumulating and the header would look good, we could still allow display width to grow. */
@media (min-width: 1400px) {
    header, main {
        max-width: 1350px;
        margin-left: auto;
        margin-right: auto;
    }
}
