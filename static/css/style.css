/* Color Theme Swatches in Hex */
.Access-Inspiration-1-hex { color: #505248; }
.Access-Inspiration-2-hex { color: #DDDDC0; }
.Access-Inspiration-3-hex { color: #A11E17; }
.Access-Inspiration-4-hex { color: #19303A; }
.Access-Inspiration-5-hex { color: #CD9B3F; }

/* Color Theme Swatches in RGBA */
.Access-Inspiration-1-rgba { color: rgba(80, 82, 72, 1); }
.Access-Inspiration-2-rgba { color: rgba(221, 221, 192, 1); }
.Access-Inspiration-3-rgba { color: rgba(161, 30, 23, 1); }
.Access-Inspiration-4-rgba { color: rgba(25, 48, 58, 1); }
.Access-Inspiration-5-rgba { color: rgba(205, 155, 63, 1); }

/* Color Theme Swatches in HSLA */
.Access-Inspiration-1-hsla { color: hsla(72, 6, 30, 1); }
.Access-Inspiration-2-hsla { color: hsla(60, 29, 80, 1); }
.Access-Inspiration-3-hsla { color: hsla(3, 75, 36, 1); }
.Access-Inspiration-4-hsla { color: hsla(198, 39, 16, 1); }
.Access-Inspiration-5-hsla { color: hsla(38, 58, 52, 1); }

/* Store variables here: */
/* :root {
} */

button:focus, input:focus, a:focus, textarea:focus {
    /* outline: 3px dashed orange; */
    outline: 5px dashed rgba(25, 48, 58, 1);
    outline-offset: 2px;
}

header a:focus {
    outline: 5px dashed rgba(25, 48, 58, 1);
    outline-offset: 2px;
}

html {
    /* If you want to create the gap by shrinking the content, set the box-sizing property to border-box (i.e. box-sizing: border-box). */
    /* https://blog.hubspot.com/website/css-margin-vs-padding */
    /* https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing */
    box-sizing: border-box;
}

/* Sticky Footer */
.wrapper {
    min-height: 100vh;
    display: grid;
    grid-template-rows: auto 1fr auto;
}

/* Make everything inherit the box-sizing. */
*, *:before, *:after {
    box-sizing: inherit;
}

/* Create some padding to separate content from page bounds. */
/* https://developer.mozilla.org/en-US/docs/Web/CSS/padding#syntax */
/* Set margin to 0 */
/* https://developer.mozilla.org/en-US/docs/Web/CSS/margin#syntax */
header, .div-replacing-main, footer {
    /* vertical | horizontal */
    margin: 0 0;
    /* vertical | horizontal */
    padding: 0 0;
}

/* Colors */
a {
    color: rgba(161, 30, 23, 1);
}

body {
    color: rgba(25, 48, 58, 1);
    background-color: rgba(219, 219, 189, 0.7);
    border-top: 25px solid rgba(25, 48, 58, 1);
}

header {
    background-color: rgba(205, 155, 63, 1);
}

.full-width-header {
    background-color: rgba(25, 48, 58, 1);
    border-top: .25em solid rgba(161, 30, 23, 1);
}

nav > p > a, a.skip-to-main-content {
    color: rgba(25, 48, 58, 1);
}

div.login-logout-block a {
    /* "display: inline-block;" will allow margins. Without it, there are no top or bottom margins since <a> are inline elements. */
    display: inline-block;
    margin: .5em;
}

/* Now: Let's change the font for all text in 'body'. */
body {
    font-family: 'Montserrat', sans-serif;
    font-weight: 500;
}

h1 {
    font-size: 36px;
}

button, a, p, h3, label, div.login-logout-block {
    font-size: 24px !important;
}

input, textarea {
    font-size: 24px;
}

/* Let's align the text of the header to 'center'. This will affect a <div> and a <nav>, which are in the <header>. */
header {
    width: 100%;
    text-align: center;
    padding: 1em;
}

.full-width-header {
    width: 100%;
    padding-bottom: .5em;
}

a.skip-to-main-content, nav {
    padding: 1.5em;
}

div.new-link-creation > h2 {
    margin: 1em;
}

div.new-link-creation > label {
    display:inline-block;
    /* top | right | bottom | left */
    margin: 2em 1em .5em 0em;
}

div.new-link-creation > button {
    display:inline-block;
    /* top | right | bottom | left */
    margin-top: 1.5em;
}

div.where-the-taps-live h2, div.where-the-taps-live article.a-current-tap {
    margin: 1.5em;
}

article.a-tap-in-the-list h3 {
    font-size: 1.3em;
    margin-top: 0;
    /* top | right | bottom | left */
}

article.a-tap-in-the-list {
    border: #465B8C solid 2px;
    margin: 1em;
    padding: 1.25em;
    /* top | right | bottom | left */
    /* vertical | horizontal */
}


footer {
    text-align: right;
    padding: 1em;
}

/* Some padding on top and bottom of stuff inside <address> */
address > a {
    display: inline-block;
    margin: .3em 0;
}

.a-current-tap, .an-editing-tap {
    margin-left: auto;
    margin-right: auto;
}

article.a-current-tap {
    border: #465B8C solid 2px;
    padding: 2em;
}

div.thing-at-top-of-main {
    display: flex;
    flex-direction: row;
}

div.login-logout-block {
    padding: 1em;
}

div.new-link-creation {
    padding: 1em;
}

@media (min-width: 700px) {
    .all-the-taps {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-evenly;
    }

    article.a-tap-in-the-list {
        width: 45%;
        /* vertical | horizontal */
        margin-bottom: .25em ;
    }
}

@media (min-width: 1100px) {

    article.a-tap-in-the-list {
        width: 30%;
    }

    /* For single TAPs. */
    /* 100% or 100vw */

    header {
        display: flex;
        /* Put title/subtitle to left and links to right. */
        /* We will align the text within those next. */
        justify-content: space-between;
    }

    /* Align the page heading/title to the left. */
    h1 {
        text-align: center;
    }

    /* Align the page links to the right. */
    nav {
        text-align: right;
    }
}



/* We should set a max width. If user uses a really large display width, we want the site to stay within reason. If the site had a design where the items could keep accumulating and the header would look good, we could still allow display width to grow. */
@media (min-width: 1400px) {
    header, .div-replacing-main {
        max-width: 1350px;
        margin-left: auto;
        margin-right: auto;
    }
}
